@section Styles{
    <link rel="stylesheet" href="~/css/AaronCSS/index.css" />
    <style>
        #bread:visited {
            color: red;
        }
    </style>
}
    <div id="det">
        <div v-for="item in restFromID">
            <!-- 餐廳照片 -->
            <div class="container">
                <div class="row">
                    <div id="bgImgDiv">
                        <img :src="item.photoPath" id="bgImgO">
                        <div class="container" style="color: #000;">
                            <h1 class="display-3"><strong>{{item.restaurantName}}</strong></h1>
                            <p style="text-indent:1rem;">
                                {{item.introduction}}
                            </p>
                        </div>
                    </div>
                </div>
            </div>
            <!--麵包屑-->
            <div class="container">
                <div class="row">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="~/Home/Index" style="text-decoration:none;">首頁</a></li>
                            <li class="breadcrumb-item">
                                <a href="~/Restaurants/Restaurant"
                               style="text-decoration:none;">寵物友善餐廳</a>
                            </li>
                            <li class="breadcrumb-item">
                                <a :href="`${item.restaurantId}`" id="bread"
                               style="text-decoration:none;">{{item.restaurantName}}</a>
                            </li>
                        </ol>
                    </nav>
                </div>
            </div>
           <div class="container d-flex justify-content-end">
                <div class="row">
                    <div class="col">
                        <a :href="item.reserve" title="按我按我" class="btn btn-outline-primary ms-1" style="border-radius: 20px;color: red;">前往預約</a>
                    </div>
                </div>
           </div>
            <!--熱門文章-->
            <div class="container mt-2">
                <div class="row">
                    <div class="col" style="padding: 15px;">
                        <h3 class="text-danger"><strong>好評文分享:</strong></h3>
                        <div class="accordion mb-2" id="accordionPanelsStayOpenExample">
                            <div class="accordion-item">
                              <h2 class="accordion-header" id="panelsStayOpen-headingOne">
                                <button class="accordion-button bg-danger text-light" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true" aria-controls="panelsStayOpen-collapseOne">
                                 熱門文章Top1
                                </button>
                              </h2>
                              <div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse show" aria-labelledby="panelsStayOpen-headingOne">
                                <div class="accordion-body">
                                  <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                                </div>
                              </div>
                            </div>
                            <div class="accordion-item">
                              <h2 class="accordion-header" id="panelsStayOpen-headingTwo">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseTwo" aria-expanded="false" aria-controls="panelsStayOpen-collapseTwo">
                                  熱門文章Top2
                                </button>
                              </h2>
                              <div id="panelsStayOpen-collapseTwo" class="accordion-collapse collapse" aria-labelledby="panelsStayOpen-headingTwo">
                                <div class="accordion-body">
                                  <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                                </div>
                              </div>
                            </div>
                            <div class="accordion-item">
                              <h2 class="accordion-header" id="panelsStayOpen-headingThree">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseThree" aria-expanded="false" aria-controls="panelsStayOpen-collapseThree">
                                 熱門文章Top3
                                </button>
                              </h2>
                              <div id="panelsStayOpen-collapseThree" class="accordion-collapse collapse" aria-labelledby="panelsStayOpen-headingThree">
                                <div class="accordion-body">
                                  <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                                </div>
                              </div>
                            </div>
                          </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <!-- FaceBook -->
    <div class="container">
        <div class="row">
            <div class="col">
                <div id="fb" class="fb-comments" data-href="@Context.Request.Scheme://@Context.Request.Host/restaurants/restaurantdetails/@ViewBag.Id" data-width="100%" data-numposts="5"></div>
                <div id="fb-root"></div>
            </div>
        </div>
    </div>
    @section Scripts{
    <script>
    
        var vm = new Vue({
            data: {
                restID: '',
                restFromID: [],

            },
            methods: {
            },
            mounted: function() {
                let that = this;
                var urlStr = window.location.href
                var index = urlStr.lastIndexOf('/')
                var str = urlStr.substring(index + 1, urlStr.length)
                that.restID = str;
                let url = `/api/RestaurantsApi/Details/rawdata/${that.restID}`
                axios.get(url)
                    .then(res => {
                        console.log(res)
                        that.restFromID = res.data;
                    })
                    .catch(err => {
                        console.error(err);
                    })
            }
        });
        vm.$mount('#det');

    </script>

}