@*@model IEnumerable<PetsWebsite.Models.Product>*@
@model PetsWebsite.Models.Product
@*商品照片,單價轉型*@
@*@{
    string imgName = $"{Model.ProductId}.jpg";
    int UnitPrice = Convert.ToInt32(Model.UnitPrice);
}*@

<div class="container" id="ShoppingCarView">
    <div class="row justify-content-center mt-5">
        <div class="col-10" v-on:change="CalculateSum">
            <table class="table border border-warning border-5 table-hover table-responsive">
                <thead>
                    <tr class="table-dark" align="center">
                        <th scope="col"></th>
                        <th scope="col">圖片</th>
                        <th scope="col">名稱</th>
                        <th scope="col">價格</th>
                        <th scope="col">數量</th>
                        <th scope="col">移除</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="table-warning " align="center" v-for="(item,index) in DShopCarList">
                        <th scope="row"><input type="checkbox" v-bind:value="index"/></th>
                        <td><img style="width:25%" alt="圖片"></td>
                        <td>{{item.productName}}</td>
                        <td>NT$&nbsp:{{item.price}}</td>
                        <td>
                            <div class="input-group container justify-content-center">
                                <a class="btn btn-outline-dark p-0" type="button" style="width:32px;" v-on:click="ReductCount(item)">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-dash-circle-fill" viewBox="0 0 16 16"><path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM4.5 7.5a.5.5 0 0 0 0 1h7a.5.5 0 0 0 0-1h-7z" /></svg>
                                </a>
                                <input type="text" style="width: 40px; font-size: 5px; text-align: center;" :value="item.count" v-on:change="PurchaseCount($event,index)">
                                <a class="btn btn-outline-dark p-0" type="button" style="width:32px;" v-on:click="AddCount(item)">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle-fill" viewBox="0 0 16 16"><path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z" /></svg>
                                </a>
                            </div>
                        </td>
                        <td>
                            <button class="btn rounded-3" style="font-size: 15px;" type="submit" :value="item.shopCarId" v-on:click="DeleteShopCarProduct(item)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16">
                                    <path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z" />
                                </svg>
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table>
            <div class="row justify-content-end">
                <div class="col-4 mt-2 ">總金額:<span class="text-danger fs-3">NT$&nbsp:{{ProdcutSum}}</span></div>
                <div class="col-2 my-1">
                    <div class="d-grid gap-2">
                        <a asp-controller="CheckOut" asp-action="Index" class="btn btn-warning btn-lg">前往結帳</a>
                    </div>
                </div>
            </div>
        </div>
    </div>



</div>

@section Scripts{
    <script>
        var ShopCarDisply = new Vue({
            el: '#ShoppingCarView',
            data: {
                DShopCarList: [],
                ProdcutSum: 0
            },
            methods: {
                ReloadShopCarData: function() {
                    var self = this;
                    $.ajax({
                        type: "get",
                        url: `/api/ShoppingCar/GetShopCarList`
                    }).done(function(data) {
                        console.log("載入購物車:",data);
                        self.DShopCarList = data;
                    }).fail(function(err) {
                        console.log(err);
                    })
                },
                DeleteShopCarProduct: function(item) {
                    var self = this;
                    var DelProductId = item.shopCarId;
                    fetch(`/api/ShoppingCar/RemoveShopCar/${DelProductId}`, {
                        method: "Delete"
                    })
                        .then(res => res.json())
                        .then(result => {
                            console.log(result);
                            if (result) {
                                self.ReloadShopCarData();
                                ShopCar.reLoadData();
                            }
                        })
                },
                AddCount: function(item) {
                    item.count += 1;
                    var NewCount = {
                        ProductId: item.shopCarId,
                        Count: item.count
                    };
                    this.SaveShopCarCount(NewCount);
                    this.CalculateSum();

                },
                ReductCount: function(item) {
                    if (item.count > 1) {
                        item.count -= 1;
                    }
                    var NewCount = {
                        ProductId: item.shopCarId,
                        Count: item.count
                    };
                    this.SaveShopCarCount(NewCount);
                    this.CalculateSum();
                },
                PurchaseCount: function(e, index) {
                    var PurCount = e.target.value;
                    if (PurCount < 1) {
                        PurCount = 1;
                    } else if (isNaN(PurCount)) {
                        PurCount = this.DShopCarList[index].count;
                    } else {
                        this.DShopCarList[index].count = PurCount;
                    }
                    var NewCount = {
                        ProductId: this.DShopCarList[index].shopCarId,
                        Count: PurCount
                    };
                    this.SaveShopCarCount(NewCount);
                },
                CalculateSum: function() {
                    var CheckProducts = $("input:checkbox:checked");
                    var Sum = 0;
                    for (let i = 0; i < CheckProducts.length; i++) {
                        var index = CheckProducts[i].value;
                        var Count = this.DShopCarList[index].count;
                        var Price = this.DShopCarList[index].price;
                        Sum += Count * Price;
                    }
                    this.ProdcutSum = Sum;
                },
                SaveShopCarCount: function(NewCount) {
                     var self = this;
                    fetch("/api/ShoppingCar/ChangeShopCarCount", {
                        method: "Put",
                        body: JSON.stringify(NewCount),
                        headers: new Headers({
                            'Content-Type': 'application/json'
                        })
                    }).then(res => res.json())
                        .then(result => {
                            if (result) {
                                console.log(result);
                                ShopCar.reLoadData();
                                self.ReloadShopCarData();
                            }
                        })
                }
            },
            mounted: function() {
                this.ReloadShopCarData();
            },
        })

        function CheckoutCommodity() {
            var CheckProducts = $("input:checkbox:checked");
            var PurchaseProduct = [];
            for (let i = 0; i < CheckProducts.length; i++) {
                PurchaseProduct.push(CheckProducts[i].value);
            }
            console.log(PurchaseProduct);
        }
    </script>
}